###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[composite:main]
use = egg:Paste#urlmap
/ = geoimagenet_ml_app
#/routes = geoimagenet_ml_app
#/routes/docs = api_app

[app:geoimagenet_ml_app]
use = egg:geoimagenet_ml
#filter-with = urlprefix

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes = pyramid_tm pyramid_celery

# --- GeoImageNet-ML API app options ---
geoimagenet_ml.api.protocol = http
geoimagenet_ml.api.port = 3000
geoimagenet_ml.api.url = http://localhost:3000
geoimagenet_ml.api.max_restart = 5
geoimagenet_ml.api.db_factory = mongodb

# --- GeoImageNet-ML ML processes options ---
geoimagenet_ml.ml.jobs_path = /data/geoimagenet/jobs
geoimagenet_ml.ml.models_path = /data/geoimagenet/models
geoimagenet_ml.ml.datasets_path = /data/geoimagenet/datasets
# number of patches to create before update in db
geoimagenet_ml.ml.datasets_update_patch_count = 32
# list of comma separated list of source directories to lookup for GeoTIFFs for patches extraction
geoimagenet_ml.ml.source_images_paths = /data/geoimagenet/images
# possibility to have up to (N_celery_workers x N_data_loader_workers) according to running jobs
geoimagenet_ml.ml.data_loader_workers = 8
# device to employ for model evaluation (can be 'cpu', 'gpu', or 'gpu:<index>', corresponding device must be available)
geoimagenet_ml.ml.data_trainer_device = cpu

# --- postgres ---
postgres.db_name = geoimagenet-ml
postgres.host = postgres
postgres.port = 5432
postgres.user = geoimagenet
postgres.password = qwerty

# mongodb
mongodb.db_name = geoimagenet-ml
mongodb.host = mongodb
mongodb.port = 27017
mongodb.user =
mongodb.password =

#[app:api_app]
#use = egg:Paste#static
#document_root = %(here)s/../swagger-ui

#[filter:urlprefix]
#use = egg:PasteDeploy#prefix
#prefix = /routes

###
# wsgi server configuration
###

[server:main]
use = egg:gunicorn#main
host = localhost
port= 3000
timeout=5
workers=3
threads=4

###
# celery scheduler config
# https://pypi.python.org/pypi/pyramid_celery
# https://celery.readthedocs.io/en/latest/userguide/configuration.html
###
[celery]
# see celeryconfig.py
USE_CELERYCONFIG = True

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, geoimagenet_ml, celery

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_geoimagenet_ml]
level =  INFO
handlers = console
qualname = geoimagenet_ml

[logger_celery]
level = INFO
handlers = console
qualname = celery

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = DEBUG
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
